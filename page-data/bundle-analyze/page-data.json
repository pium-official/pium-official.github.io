{"componentChunkName":"component---src-templates-post-jsx","path":"/bundle-analyze/","result":{"data":{"site":{"siteMetadata":{"title":"pium.log"}},"markdownRemark":{"id":"cecbc8b9-db00-562b-aa0b-06c406cfc44a","excerpt":"이 글은 우테코 피움팀 크루 '클린'가 작성했습니다. 사건의 발단 이번 Level3 2차 데모데이때 권장사항을 맞추기 위해서 프로덕션 배포까지 진행했습니다. 어찌 저찌 배포는 잘 끝이 났는데 문제는 첫 페이지가 로드 되는데 약 4초 가량의 시간이 걸린다는 것이었습니다. 네트워크 문제 문제인가? 하고 봤는데 아니었고, 결국  파일의 크기를 보니 무려 16m…","html":"<blockquote>\n<p>이 글은 우테코 피움팀 크루 '<a href=\"https://github.com/hozzijeong\">클린</a>'가 작성했습니다.</p>\n</blockquote>\n<h2>사건의 발단</h2>\n<p>이번 Level3 2차 데모데이때 권장사항을 맞추기 위해서 프로덕션 배포까지 진행했습니다. 어찌 저찌 배포는 잘 끝이 났는데 문제는 첫 페이지가 로드 되는데 약 4초 가량의 시간이 걸린다는 것이었습니다. 네트워크 문제 문제인가? 하고 봤는데 아니었고, 결국 <code class=\"language-text\">bundle.js</code> 파일의 크기를 보니 무려 16m나 되었던 것입니다.</p>\n<p><img src=\"https://github.com/pium-official/pium-official.github.io/assets/50974359/72ec258f-77e0-41aa-8bcd-c4c3d3b0410e\" alt=\"image\"></p>\n<p>왜 이렇게 크기가 크지? 라는 생각을 하며 크게 2가지의 경우를 생찾아봤습니다. 하지만 다음과 같은 이유로 원인이 아님을 알았습니다.</p>\n<ol>\n<li>minify가 되지 않았다 → webpack 4 이상을 사용하면서 자동으로 <code class=\"language-text\">production</code> 일때는 자동으로 설정</li>\n<li>css 파일 크기가 너무 큼 → <code class=\"language-text\">styled-component</code>를 사용하기 때문에 .css 가 없음.</li>\n</ol>\n<p>따라서 <code class=\"language-text\">bundle.js</code>의 성능을 확인해 볼 필요가 있었고 검색하던 도중 <a href=\"https://www.npmjs.com/package/webpack-bundle-analyzer\">webpack-bundle-analyzer</a>라는 라이브러리를 알게되었습니다.</p>\n<h2>Webpack Bundle Analyzer</h2>\n<p>webpack을 통해 build한 bundle의 성능을 측정하는 라이브러리로 모든 번들에 대한 트리를 시각화 해서 보여주는 이점을 갖고 있습니다. 사용법은 매우 간단합니다. 우선 설치를 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"># <span class=\"token constant\">NPM</span>\nnpm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer\n# Yarn\nyarn add <span class=\"token operator\">-</span><span class=\"token constant\">D</span> webpack<span class=\"token operator\">-</span>bundle<span class=\"token operator\">-</span>analyzer</code></pre></div>\n<p>설치를 한 뒤 <code class=\"language-text\">webpack.config.js</code> 파일 내부에서 플러그인을 사용해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> BundleAnalyzerPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-bundle-analyzer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BundleAnalyzerPlugin<span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">BundleAnalyzerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>플러그인 안에 옵션을 설정할 수 있는데, <a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer#options-for-plugin\">여기</a>에서 옵션에 대한 정보를 확인할 수 있습니다.</p>\n<p>위에 플러그인 옵션에서 <code class=\"language-text\">generateStatsFile</code> 을 <code class=\"language-text\">true</code> 로 설정한 다음에 <code class=\"language-text\">package.json</code>에 <code class=\"language-text\">scripts</code> 에다음 명령어를 통해 실행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"preanalyze\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build-dev\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"analyze\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-bundle-analyzer bundle/output/path/stats.json\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://github.com/pium-official/pium-official.github.io/assets/50974359/6bc524c4-4866-4ebe-9daa-95035e0c0dd5\" alt=\"image\"></p>\n<p>실행한 뒤에 bundle을 분석해 봤더니 react-icons에서 15.3m나 차지하고 있었습니다. 드디어 문제의 원흉을 찾아냈습니다. 그렇다면 react-icons를 대체할 수 있는 방법이 있을까요?</p>\n<h3>Icons</h3>\n<p><a href=\"https://icones.js.org/collection/all?s=material-symbols:cancel\">여기</a>에 가시면 다양한 아이콘들을 찾아볼 수 있습니다. 원하는 아이콘을 선택한 다음에 SVG, Component 등으로 코드를 반환해 줍니다. 이를 통해서 react-icons를 제거하고 icons를 사용해서 아이콘을 대체할 수 있었습니다.</p>","frontmatter":{"title":"bundle-analyze를 통한 bundle 크기 분석","date":"July 28, 2023","update":"July 28, 2023","tags":["bundle","최적화"],"series":null},"fields":{"slug":"/bundle-analyze/","readingTime":{"minutes":3.285}}},"seriesList":{"edges":[{"node":{"id":"28f1d87e-d3fc-5567-8531-57649652864f","fields":{"slug":"/sprint-idea/"},"frontmatter":{"title":"구글 스프린트 기반 아이디어 도출"}}},{"node":{"id":"4a9246fb-171b-5973-88fc-864034e78afd","fields":{"slug":"/blog-starter/"},"frontmatter":{"title":"피움 블로그 생성과정"}}},{"node":{"id":"c826ce0e-1ea7-517c-8d19-84e90a59a798","fields":{"slug":"/jenkins-setting/"},"frontmatter":{"title":"젠킨스 설치하기"}}},{"node":{"id":"a387bf4f-567f-50e7-b6a7-99a1a1c8971b","fields":{"slug":"/jpa-notnull-nullable/"},"frontmatter":{"title":"@NotNull과 nullable = false는 어떤 차이가 있을까?"}}},{"node":{"id":"a78e224b-b711-5071-8e90-013d6f4bebc3","fields":{"slug":"/pium-deploy-step/"},"frontmatter":{"title":"피움의 배포과정"}}},{"node":{"id":"ce07fbab-1ed5-5f1e-8e2f-eb430879b56a","fields":{"slug":"/fe-tanstack-query/"},"frontmatter":{"title":"프론트엔드: Tanstack Query 사용에 대하여"}}},{"node":{"id":"159c943b-1a50-57dd-aa71-7557364752a5","fields":{"slug":"/ci-cd-setting/"},"frontmatter":{"title":"Jenkins와 Github Webhook을 이용해 CI/CD 구축하기"}}},{"node":{"id":"dea45a4a-bfde-5fbb-8a97-42d3a3e77a0b","fields":{"slug":"/jenkins-hook-by-label/"},"frontmatter":{"title":"PR 라벨로 젠킨스 빌드유발을 구분하기"}}},{"node":{"id":"1a03734e-d413-553f-9152-1dad2fc4acca","fields":{"slug":"/apply-https/"},"frontmatter":{"title":"내 서버에 HTTPS 설정하기"}}},{"node":{"id":"cecbc8b9-db00-562b-aa0b-06c406cfc44a","fields":{"slug":"/bundle-analyze/"},"frontmatter":{"title":"bundle-analyze를 통한 bundle 크기 분석"}}},{"node":{"id":"707f8ffb-1409-5c27-b15a-5661b235c226","fields":{"slug":"/db-drop-stop/"},"frontmatter":{"title":"Table Drop 못하게 막아버리기"}}},{"node":{"id":"fe4b591a-4dd5-5dd2-b18a-b318afd1e9e3","fields":{"slug":"/transactional-not-in-restassured/"},"frontmatter":{"title":"[트러블슈팅] @SpringbootTest의 RANDOM_PORT 환경에서 @Transactional 어노테이션을 사용했을 때, RestAssured GET 요청이 수행되지 않는 경우(트랜잭션 격리 이해하기)"}}},{"node":{"id":"80aa708e-ef8a-5c79-9644-cb8c04d55a63","fields":{"slug":"/acceptance-test-resolve/"},"frontmatter":{"title":"인수테스트 데이터 초기화하기"}}},{"node":{"id":"15def1d5-c20f-5d07-b46e-24a14661365f","fields":{"slug":"/react-setting-without-cra/"},"frontmatter":{"title":"webpack으로만 React 설정하기 (without CRA)"}}},{"node":{"id":"66383c86-e2c8-533a-90e0-2effae572742","fields":{"slug":"/stylelint-and-husky/"},"frontmatter":{"title":"stylelint와 husky를 통해 컨벤션 통일하기"}}},{"node":{"id":"ed5951d5-beda-5a8f-adb2-07c2fcb38d5e","fields":{"slug":"/OAuth2.0/"},"frontmatter":{"title":"내가 이해한 OAuth2.0"}}},{"node":{"id":"45eeb9a3-557d-5704-8fd9-925283e1e27b","fields":{"slug":"/restdocs-start/"},"frontmatter":{"title":"RestDocs로 API 문서화하기"}}},{"node":{"id":"663b560a-734d-51a9-a6dc-3c4f50716c74","fields":{"slug":"/spring-event-apply/"},"frontmatter":{"title":"Spring Event 적용하기"}}},{"node":{"id":"503e9e71-eda3-53d7-8142-7c309faf213e","fields":{"slug":"/why_we_applied_querydsl/"},"frontmatter":{"title":"피움 서비스의 Querydsl 도입 이유"}}},{"node":{"id":"55ae8038-3f65-5a59-8db3-c7405e7fc125","fields":{"slug":"/github-actions-cypress/"},"frontmatter":{"title":"피움 Cypress 자동화 구축기"}}},{"node":{"id":"709124d0-5b05-5530-804d-e90ec9856a13","fields":{"slug":"/querydsl_apply_procedure/"},"frontmatter":{"title":"피움 서비스의 Querydsl 적용 과정"}}},{"node":{"id":"5c865dcb-cefd-58be-8968-b5edf6c8080c","fields":{"slug":"/server-logging/"},"frontmatter":{"title":"Logback을 이용해 운영 환경 별 로그 남기기"}}},{"node":{"id":"8269f166-d041-533c-9d44-332d8d8c3dca","fields":{"slug":"/server-monitoring/"},"frontmatter":{"title":"CloudWatch를 이용한 모니터링 환경 구성"}}},{"node":{"id":"0faec7ad-3bd1-5f5e-9222-115f771df8ed","fields":{"slug":"/tanstack-query-cache-trouble-shooting/"},"frontmatter":{"title":"InfinityQuery에서 fetch가 제대로 이루어지지 않는다?!?!"}}},{"node":{"id":"c77f7199-7fc6-53a3-a1fb-0792e05655a7","fields":{"slug":"/OAuth2.0-backend/"},"frontmatter":{"title":"OAuth 2.0 로그인 구현하기 (카카오)"}}},{"node":{"id":"12e4480d-386b-5d0e-bd69-4209fed36066","fields":{"slug":"/OAuth-test-backend/"},"frontmatter":{"title":"외부 API 를 의존하는 OAuth 로그인 테스트하기"}}},{"node":{"id":"ff40e109-cc92-5d83-a213-ca9d07136d95","fields":{"slug":"/aws-s3-apply/"},"frontmatter":{"title":"AWS S3로 정적 이미지 배포하기"}}},{"node":{"id":"e343af80-72dd-5173-bbb5-5069a17d1200","fields":{"slug":"/search_in_spring_data_jpa/"},"frontmatter":{"title":"Spring Data Jpa를 활용한 검색 기능 개발하기"}}},{"node":{"id":"af344dd8-ea77-5fde-9452-a97952ce60be","fields":{"slug":"/submodule-apply/"},"frontmatter":{"title":"Git submodule을 이용한 민감정보 관리"}}},{"node":{"id":"08c9daf0-2344-52a9-8c68-31ac04c24ff0","fields":{"slug":"/tomcat-thread-config/"},"frontmatter":{"title":"톰캣 스레드 설정하기"}}},{"node":{"id":"dbe47289-01f4-571d-9506-fbb92016f547","fields":{"slug":"/optimize-frontend/"},"frontmatter":{"title":"피움 최적화하기"}}},{"node":{"id":"7b830fe6-e2df-564a-926e-7f7800380336","fields":{"slug":"/query-analysis/"},"frontmatter":{"title":"서비스 내에서 발생하는 쿼리를 분석하고 개선하기"}}},{"node":{"id":"eafed74f-ff11-5af1-a589-e9dd2ccb5c8e","fields":{"slug":"/http-cache/"},"frontmatter":{"title":"CloudFront와 HTTP 캐시"}}},{"node":{"id":"37437d15-a63e-52ef-b031-6ee1bc6fa8bc","fields":{"slug":"/image-resize/"},"frontmatter":{"title":"서버에서 이미지 리사이징하기"}}},{"node":{"id":"216f4636-4125-5765-83d8-a6a610692a41","fields":{"slug":"/dont-stop-deploy/"},"frontmatter":{"title":"무중단 배포 환경 구성하기"}}},{"node":{"id":"dd095976-5a96-51b5-9686-8956dc60cd24","fields":{"slug":"/hikaricp-connection-pool-setting/"},"frontmatter":{"title":"HikariCp Connection Pool 값 설정"}}},{"node":{"id":"625ad76f-acb1-56cc-9baa-3d6f1a954ac2","fields":{"slug":"/pwa/"},"frontmatter":{"title":"PWA를 도입해보자"}}},{"node":{"id":"6a12651c-e6b8-5fa6-9c57-766772d32680","fields":{"slug":"/serviceworker/"},"frontmatter":{"title":"Service Worker에 대한 대략적인 이해"}}},{"node":{"id":"ac7012e4-5b85-5040-b65e-c068968d7979","fields":{"slug":"/web-push/"},"frontmatter":{"title":"브라우저에서 알림 구현하기"}}},{"node":{"id":"b9709447-61dc-52f0-95a5-8670a3fbaaf4","fields":{"slug":"/installPrompt/"},"frontmatter":{"title":"홈화면에 추가 안내 prompt 만들기"}}},{"node":{"id":"09501eea-fa70-5c42-9ee1-f25a5ab08bb5","fields":{"slug":"/pium-apply-pwa/"},"frontmatter":{"title":"피움의 PWA 적용기"}}},{"node":{"id":"0a47c3f5-616d-564f-b5d1-1ac2eb9bcc54","fields":{"slug":"/update-ssl/"},"frontmatter":{"title":"만료된 SSL 인증서 갱신하기"}}}]},"previous":{"fields":{"slug":"/apply-https/"},"frontmatter":{"title":"내 서버에 HTTPS 설정하기"}},"next":{"fields":{"slug":"/db-drop-stop/"},"frontmatter":{"title":"Table Drop 못하게 막아버리기"}}},"pageContext":{"id":"cecbc8b9-db00-562b-aa0b-06c406cfc44a","series":null,"previousPostId":"1a03734e-d413-553f-9152-1dad2fc4acca","nextPostId":"707f8ffb-1409-5c27-b15a-5661b235c226"}},"staticQueryHashes":[],"slicesMap":{}}